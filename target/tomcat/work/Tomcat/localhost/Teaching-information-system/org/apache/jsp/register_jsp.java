/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2022-11-14 09:47:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
request.setCharacterEncoding ("UTF-8");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"zh_CN\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>注册您的账户</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"element-ui/lib/theme-chalk/index.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/register.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <div id=\"app\">\r\n");
      out.write("        <h2 id=\"title\">注册账户</h2>\r\n");
      out.write("        <div class=\"logInner\">\r\n");
      out.write("            <el-form ref=\"form\" :rules=\"rules\" :model=\"form\" label-width=\"80px\" label-position=\"left\">\r\n");
      out.write("                <el-form-item required=\"true\" label=\"姓名\" prop=\"name\">\r\n");
      out.write("                    <el-input v-model=\"form.name\" placeholder=\"请输入姓名\"></el-input>\r\n");
      out.write("                </el-form-item>\r\n");
      out.write("                <el-form-item required=\"true\" label=\"学工号\" prop=\"id\">\r\n");
      out.write("                    <el-input v-model=\"form.id\" @blur=\"checkId()\" placeholder=\"请输入学生学号或教师工号\"></el-input>\r\n");
      out.write("                </el-form-item>\r\n");
      out.write("                <el-form-item required=\"true\" label=\"密码\" prop=\"pwd\">\r\n");
      out.write("                    <el-input v-model=\"form.pwd\" show-password placeholder=\"请输入密码\" ></el-input>\r\n");
      out.write("                </el-form-item>\r\n");
      out.write("                <el-form-item required=\"true\" label=\"确认密码\" prop=\"pwd_ck\">\r\n");
      out.write("                    <el-input v-model=\"form.pwd_ck\" show-password placeholder=\"请再次输入密码\" ></el-input>\r\n");
      out.write("                </el-form-item>\r\n");
      out.write("                <el-form-item required=\"true\" label=\"院系\" prop=\"faculty\">\r\n");
      out.write("                    <template>\r\n");
      out.write("                        <el-select v-model=\"form.faculty\" filterable placeholder=\"请选择\">\r\n");
      out.write("                            <el-option\r\n");
      out.write("                                    v-for=\"item in options\"\r\n");
      out.write("                                    :key=\"item.value\"\r\n");
      out.write("                                    :label=\"item.label\"\r\n");
      out.write("                                    :value=\"item.value\">\r\n");
      out.write("                            </el-option>\r\n");
      out.write("                        </el-select>\r\n");
      out.write("                    </template>\r\n");
      out.write("                </el-form-item>\r\n");
      out.write("\r\n");
      out.write("                <el-form-item required=\"true\" label=\"入学年份\" prop=\"grade\">\r\n");
      out.write("                    <el-date-picker\r\n");
      out.write("                            format=\"yyyy\"\r\n");
      out.write("                            value-format=\"yyyy\"\r\n");
      out.write("                            v-model=\"form.grade\"\r\n");
      out.write("                            type=\"year\"\r\n");
      out.write("                            placeholder=\"选择入学年份\">\r\n");
      out.write("                    </el-date-picker>\r\n");
      out.write("                </el-form-item>\r\n");
      out.write("                <el-form-item required=\"true\" label=\"验证码\" prop=\"checkCode\">\r\n");
      out.write("                    <el-input id=\"ckCode\" v-model=\"form.checkCode\" placeholder=\"请输入验证码\"></el-input>\r\n");
      out.write("                    <a href=\"#\" id=\"changeImg\"><img id=\"checkCodeImg\" src=\"/Teaching-information-system/checkCodeServlet\"></a>\r\n");
      out.write("                </el-form-item>\r\n");
      out.write("                <el-form-item>\r\n");
      out.write("                    <el-button type=\"primary\" v-on:click=\"onSubmit()\">立即注册</el-button>\r\n");
      out.write("                    <el-button v-on:click=\"turn()\" type=\"success\" plain>登入已有账户</el-button>\r\n");
      out.write("                </el-form-item>\r\n");
      out.write("            </el-form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <canvas id=\"cas\"></canvas>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script src=\"highcharts/highcharts.js\"></script>\r\n");
      out.write("    <script src=\"highcharts/modules/exporting.js\"></script>\r\n");
      out.write("    <script src=\"highcharts/modules/series-label.js\"></script>\r\n");
      out.write("    <script src=\"highcharts/modules/oldie.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"js/vue.js\"></script>\r\n");
      out.write("    <script src=\"element-ui/lib/index.js\"></script>\r\n");
      out.write("    <script src=\"js/axios-0.18.0.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        let vm = new Vue({\r\n");
      out.write("            el:\"#app\",\r\n");
      out.write("            data() {\r\n");
      out.write("                var validatePass = (rule, value, callback) => {\r\n");
      out.write("                    if (value === '') {\r\n");
      out.write("                        callback(new Error('请输入密码'));\r\n");
      out.write("                    } else {\r\n");
      out.write("                        if (this.form.pwd !== '') {\r\n");
      out.write("                            this.$refs.form.validateField('pwd_ck');\r\n");
      out.write("                        }\r\n");
      out.write("                        callback();\r\n");
      out.write("                    }\r\n");
      out.write("                };\r\n");
      out.write("                var validatePass2 = (rule, value, callback) => {\r\n");
      out.write("                    if (value === '') {\r\n");
      out.write("                        callback(new Error('请再次输入密码'));\r\n");
      out.write("                    } else if (value !== this.form.pwd) {\r\n");
      out.write("                        callback(new Error('两次输入密码不一致!'));\r\n");
      out.write("                    } else {\r\n");
      out.write("                        callback();\r\n");
      out.write("                    }\r\n");
      out.write("                };\r\n");
      out.write("                var yearCheck = (rule, value, callback) => {\r\n");
      out.write("                    if (value > \"2023\") {\r\n");
      out.write("                        callback(new Error('入学年份不得大于2023'));\r\n");
      out.write("                    }\r\n");
      out.write("                    callback();\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                return {\r\n");
      out.write("                    form: {\r\n");
      out.write("                        name: \"\",\r\n");
      out.write("                        id: \"\",\r\n");
      out.write("                        pwd:\"\",\r\n");
      out.write("                        pwd_ck: \"\",\r\n");
      out.write("                        faculty: \"\",\r\n");
      out.write("                        grade: \"\",\r\n");
      out.write("                        checkCode:\"\"\r\n");
      out.write("                    },\r\n");
      out.write("                    rules: {\r\n");
      out.write("                        name:[\r\n");
      out.write("                            {required: true, message: '必须输入姓名', trigger: 'blur'}\r\n");
      out.write("                        ],\r\n");
      out.write("                        id:[\r\n");
      out.write("                            {required: true, message: '必须输入学工号', trigger: 'blur'},\r\n");
      out.write("                            {min: 2, message: '长度在 2 个数字以上', trigger: 'blur' }\r\n");
      out.write("                        ],\r\n");
      out.write("                        faculty:[\r\n");
      out.write("                            {required: true, message: '必须选择学院', trigger: 'blur'}\r\n");
      out.write("                        ],\r\n");
      out.write("                        grade:[\r\n");
      out.write("                            {required: true, message: '必须选择入校年份', trigger: 'blur'},\r\n");
      out.write("                            { validator: yearCheck, trigger: 'blur' }\r\n");
      out.write("                        ],\r\n");
      out.write("                        checkCode:[\r\n");
      out.write("                            {required: true, message: '未输入验证码', trigger: 'blur'}\r\n");
      out.write("                        ],\r\n");
      out.write("                        pwd: [\r\n");
      out.write("                            { validator: validatePass, trigger: 'blur' }\r\n");
      out.write("                        ],\r\n");
      out.write("                        pwd_ck: [\r\n");
      out.write("                            { validator: validatePass2, trigger: 'blur' }\r\n");
      out.write("                        ],\r\n");
      out.write("                    },\r\n");
      out.write("                    // 院系选择\r\n");
      out.write("                    options: [{\r\n");
      out.write("                        value: '建筑工程学院',\r\n");
      out.write("                        label: '建筑工程学院'\r\n");
      out.write("                    }, {\r\n");
      out.write("                        value: '信息工程学院',\r\n");
      out.write("                        label: '信息工程学院'\r\n");
      out.write("                    }, {\r\n");
      out.write("                        value: '教育科学学院',\r\n");
      out.write("                        label: '教育科学学院'\r\n");
      out.write("                    }, {\r\n");
      out.write("                        value: '经济管理学院',\r\n");
      out.write("                        label: '经济管理学院'\r\n");
      out.write("                    }, {\r\n");
      out.write("                        value: '数学院',\r\n");
      out.write("                        label: '数学院'\r\n");
      out.write("                    }, {\r\n");
      out.write("                        value: '马克思主义学院',\r\n");
      out.write("                        label: '马克思主义学院'\r\n");
      out.write("                    }],\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            methods: {\r\n");
      out.write("                // Vue.prototype.Notification = Notification;\r\n");
      out.write("                onSubmit() {\r\n");
      out.write("                    let param={\r\n");
      out.write("                        name: this.form.name,\r\n");
      out.write("                        id: this.form.id,\r\n");
      out.write("                        pwd:this.form.pwd,\r\n");
      out.write("                        faculty: this.form.faculty,\r\n");
      out.write("                        grade: this.form.grade,\r\n");
      out.write("                        checkCode:this.form.checkCode\r\n");
      out.write("                    };\r\n");
      out.write("                    if (param.name==\"\" || param.id==\"\" || param.pwd==\"\" || param.faculty==\"\" || param.grade==\"\" || param.identify==\"\" || param.checkCode==\"\"){\r\n");
      out.write("                        this.$notify({\r\n");
      out.write("                            title: '警告',\r\n");
      out.write("                            message: '请将表单填写完整',\r\n");
      out.write("                            type: 'warning'\r\n");
      out.write("                        });\r\n");
      out.write("                        return;\r\n");
      out.write("                    }\r\n");
      out.write("                    axios({\r\n");
      out.write("                        method:\"post\",\r\n");
      out.write("                        url:\"http://localhost:8080/Teaching-information-system/registerServlet\",\r\n");
      out.write("                        // transfer:true,\r\n");
      out.write("                        data:JSON.stringify(param)\r\n");
      out.write("                    }).then(function (resp) {\r\n");
      out.write("                        if (resp.data==\"checkCodeError\"){\r\n");
      out.write("                            vm.$notify.error({\r\n");
      out.write("                                title: '错误',\r\n");
      out.write("                                message: '验证码错误'\r\n");
      out.write("                            });\r\n");
      out.write("                        }else if(resp.data==\"registSuccess\"){\r\n");
      out.write("                            // alert(\"注册成功\");\r\n");
      out.write("                            vm.$notify({\r\n");
      out.write("                                title: '成功',\r\n");
      out.write("                                message: '注册成功',\r\n");
      out.write("                                type: 'success'\r\n");
      out.write("                            });\r\n");
      out.write("                        }else if(resp.data==\"registFailed\"){\r\n");
      out.write("                            vm.$notify.error({\r\n");
      out.write("                                title: '错误',\r\n");
      out.write("                                message: '注册失败'\r\n");
      out.write("                            });\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                },\r\n");
      out.write("                turn() {\r\n");
      out.write("                    window.location.href=\"login.jsp\";\r\n");
      out.write("                },\r\n");
      out.write("                checkId() {\r\n");
      out.write("                    // alert(\"执行了\");\r\n");
      out.write("                    var id=this.form.id;\r\n");
      out.write("                    axios({\r\n");
      out.write("                        method:\"post\",\r\n");
      out.write("                        url:\"http://localhost:8080/Teaching-information-system/selectUserServlet\",\r\n");
      out.write("                        data:\"id=\"+id,\r\n");
      out.write("                    }).then(function (resp) {\r\n");
      out.write("                        if (resp.data){\r\n");
      out.write("                            vm.$message({\r\n");
      out.write("                                message: '学工号已存在，可直接登入',\r\n");
      out.write("                                type: 'warning'\r\n");
      out.write("                            });\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        document.getElementById(\"changeImg\").onclick=function () {\r\n");
      out.write("            document.getElementById(\"checkCodeImg\").src=\"/Teaching-information-system/checkCodeServlet?\"+new Date().getMilliseconds();\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <script src=\"js/animate.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
